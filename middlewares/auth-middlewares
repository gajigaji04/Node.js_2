const jwt = require("jsonwebtoken");
const User = require("../schemas/user");

module.exports = async function (req, res, next) {
  console.log(req.cookies);
  // Bearer ewrerwe.wererw.qwrqwerwe
  // undefined
  // authorization 쿠키가 존재하지 않을 때를 대비
  const authToken = req.cookies.Authorization || ""; // ?? -> ||
  const [authType, token] = authToken.split(" ");

  // authType === Bearer 값인지 확인
  // authToken 검증
  if (authType !== "Bearer" || !token) {
    res.status(400).json({
      errorMessage: "로그인 후에 이용할 수 있는 기능입니다.",
    });
    return;
  }

  try {
    // 1. authToken이 만료되었는지 확인
    // 2. authToken이 서버가 발급한 토큰인지 검증
    const { userId } = jwt.verify(token, "gajigaji");

    // 3. authToken을 가진 userId에 해당하는 사용자가 실제 DB에 존재하는지 확인
    const user = await User.findById(userId);
    res.locals.user = user;

    next(); // 이 미들웨어 다음으로 보낸다.
  } catch (error) {
    console.log(error);
    res
      .status(400)
      .json({ errorMessage: "로그인 이후에 이용할 수 있는 기능입니다." });
  }
};
